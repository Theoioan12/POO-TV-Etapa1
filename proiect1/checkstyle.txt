Starting audit...
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\checker\CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:14:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:18:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:18:26: Parameter count should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:22:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:26:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:26:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:30:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:34:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:34:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:38:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:42:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:42:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:46:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:50:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:50:28: Parameter feature should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:54:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:58:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:58:26: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:62:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:66:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:66:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:70:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:74:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:74:25: Parameter rate should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:78:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:82:5: Class 'Actions' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actions' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Actions.java:82:28: Parameter filters should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:6:23: Variable 'genre' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:7:23: Variable 'actors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:9:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:13:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:13:26: Parameter genre should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:17:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:21:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Contains.java:21:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:10:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:14:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:14:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:18:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:22:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:22:29: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:26:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:30:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:30:32: Parameter accountType should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:34:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:38:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:38:28: Parameter country should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:42:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:46:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:46:28: Parameter balance should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:50:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:54:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Credentials.java:54:25: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:4:14: Variable 'contains' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:5:10: Variable 'sort' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:7:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:11:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:11:29: Parameter contains should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:15:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:19:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Filters.java:19:25: Parameter sort should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:1:9: Name 'Implementation.Homepage' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:4:8: Unused import - Implementation.UserData. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:9: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:9:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'filter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'filter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:9:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:9:25: Parameter currentMoviesList should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:9:65: Parameter i should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:9:72: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:9:85: Parameter filteredMovies should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:27: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:46: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:47: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:47:31: Inner assignments should be avoided. [InnerAssignment]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Filter.java:47:104: Empty statement. [EmptyStatement]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:1:9: Name 'Implementation.Homepage' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:10:5: Class 'Login' looks like designed for extension (can be subclassed), but the method 'Login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'Login' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:10:16: Method Name 'Login' must not equal the enclosing class name. [MethodName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:10:16: Name 'Login' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:10:22: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:10:23: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:10:47: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:13:87: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:26:18: Parameter parent should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:26:31: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:26:46: Parameter pageName should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Login.java:26:63: Parameter pageDescription should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:1:9: Name 'Implementation.Homepage' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:6:9: Variable 'numLikes' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:7:12: Variable 'rating' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:8:9: Variable 'numRatings' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:10:5: Class 'MovieData' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieData' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:14:5: Class 'MovieData' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieData' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:14:29: Parameter numLikes should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:18:5: Class 'MovieData' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieData' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:22:5: Class 'MovieData' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieData' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:22:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:26:5: Class 'MovieData' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieData' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:30:5: Class 'MovieData' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieData' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:30:31: Parameter numRatings should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\MovieData.java:36:22: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:1:9: Name 'Implementation.Homepage' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:4:10: Variable 'parent' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:5:10: Variable 'children' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:7:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:11:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:11:29: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:16:19: Variable 'pageDescription' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:18:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getPageDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getPageDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:22:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setPageDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setPageDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:22:36: Parameter pageDescription should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:26:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getParent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getParent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:30:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setParent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setParent' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:30:27: Parameter parent should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:34:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getPageName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getPageName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:38:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setPageName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setPageName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:38:29: Parameter pageName should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:46:17: Parameter parent should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:46:30: Parameter children should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:46:45: Parameter pageName should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Page.java:46:62: Parameter pageDescription should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Register.java:1:9: Name 'Implementation.Homepage' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Register.java:3:8: Unused import - Implementation.Credentials. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Register.java:9:5: Class 'Register' looks like designed for extension (can be subclassed), but the method 'register' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Register' final or making the method 'register' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Register.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Register.java:9:26: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Register.java:9:27: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Register.java:9:51: Parameter tmpUser should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:1:9: Name 'Implementation.Homepage' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10:5: Class 'SelectMovie' looks like designed for extension (can be subclassed), but the method 'SelectMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SelectMovie' final or making the method 'SelectMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10:17: Name 'SelectMovies' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10:30: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10:31: Parameter currentMoviesList should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10:41: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10:72: Parameter inputData should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:10:89: Parameter currUser should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:15:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:16: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:19:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:20:26: Must have at least one statement. [EmptyBlock]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\SelectMovie.java:25:20: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:1:9: Name 'Implementation.Homepage' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:5:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:8:5: Class 'Upgrades' looks like designed for extension (can be subclassed), but the method 'buyPremiumAccount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Upgrades' final or making the method 'buyPremiumAccount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:8:38: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:8:39: Parameter currUser should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:8:58: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:9:42: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:11:65: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:13:11: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:17:5: Class 'Upgrades' looks like designed for extension (can be subclassed), but the method 'buyTokens' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Upgrades' final or making the method 'buyTokens' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:17:27: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:17:28: Parameter currUser should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:17:47: Parameter count should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Homepage\Upgrades.java:20:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Input.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Input.java:6:22: Variable 'users' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Input.java:7:23: Variable 'movies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Input.java:8:24: Variable 'actions' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Input.java:10:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Input.java:14:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Input.java:18:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:9:23: Variable 'genres' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:10:23: Variable 'actors' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:11:23: Variable 'countriesBanned' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:13:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:17:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:17:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:21:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:25:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:25:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:29:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:33:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:33:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:37:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:41:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:41:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:45:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:49:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:49:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:53:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:57:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Movies.java:57:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:1:9: Name 'Implementation.Output' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:5:8: Unused import - com.fasterxml.jackson.databind.ObjectWriter. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:7:8: Unused import - com.fasterxml.jackson.databind.node.NullNode. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:13: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:13:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'outputgenerator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'outputgenerator' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:13:33: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:13:51: Parameter currentMoviesList should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:13:91: Parameter currUser should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:13:110: Parameter objectMapper should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:21: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:21:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'outputErrorGenerator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'outputErrorGenerator' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:21:38: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:21:56: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Output\Output.java:21:85: Parameter objectMapper should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Sort.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Sort.java:7:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Sort.java:11:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Sort.java:11:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Sort.java:15:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Sort.java:19:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Sort.java:19:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:8:17: Variable 'credentials' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:9:9: Variable 'tokensCount' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:10:9: Variable 'numFreePremiumMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:11:33: Variable 'purchasedMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:12:33: Variable 'watchedMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:13:33: Variable 'likedMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:14:33: Variable 'ratedMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:16:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:20:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:20:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:24:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'getTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'getTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:28:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'setTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'setTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:28:32: Parameter tokensCount should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:32:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'getNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'getNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:36:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'setNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'setNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:36:41: Parameter numFreePremiumMovies should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:40:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'getPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'getPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:44:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'setPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'setPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:44:36: Parameter purchasedMovies should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:48:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:52:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:52:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:56:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:60:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:60:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:64:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:68:5: Class 'UserData' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserData' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:68:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:72:21: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:74:38: '15' is a magic number. [MagicNumber]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:84:21: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\UserData.java:84:22: Parameter userData should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Users.java:1:9: Name 'Implementation' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Users.java:4:17: Variable 'credentials' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Users.java:6:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Users.java:10:5: Class 'Users' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Users' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Users.java:10:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Implementation\Users.java:14:18: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:1:31: Using the '.*' form of import should be avoided - Implementation.Homepage.*. [AvoidStarImport]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:3:8: Unused import - Implementation.Movies. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:10:8: Unused import - com.fasterxml.jackson.databind.node.NullNode. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:11:8: Unused import - com.fasterxml.jackson.databind.node.ObjectNode. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:12:1: Illegal import - sun.rmi.runtime.Log. [IllegalImport]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:12:8: Unused import - sun.rmi.runtime.Log. [UnusedImports]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:18:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:19:5: Method length is 234 lines (max allowed is 150). [MethodLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:19:29: Parameter args should be final. [FinalParameters]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:74: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:94: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:95:33: '{' at column 33 should be on the previous line. [LeftCurly]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:97: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:109:25: '}' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:109:26: 'else' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:113: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:114:33: '{' at column 33 should be on the previous line. [LeftCurly]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:115: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:123: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:128: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:134: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:143: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:146: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:148: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:149: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:149:49: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:151: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:152: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:163:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:173: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:185:24: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:185:26: '(' is followed by whitespace. [ParenPad]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:194:38: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:195:48: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:197:28: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:212: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:221: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Main.java:235: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Test.java:151:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Test.java:151:22: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\titi\Desktop\PULAMEA - Copy\proiect1\.\src\Test.java:187: Line is longer than 100 characters (found 102). [LineLength]
Audit done.
Checkstyle ends with 299 errors.
